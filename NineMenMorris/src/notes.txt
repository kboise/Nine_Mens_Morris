NOTES:

11/03/2016 - 1:00 AM
- added a couple more APIs to Board and Cell classes
  Board.getOwnedCells(Player, true);
  Board.getNonMillOwnedCells(Player, true);
  Board.getMillOwnedCells(Player, true);
  Board.getVacantCells();
  Cell.hasOpenNeighbor()
  - check if cell can move left/right/top/bottom

- Expanded Mill-detect-and-Remove logic to allow removal of an opponent's mark, even if existing 
  marks are part of a Mill (see autorun_v3() example in Debug class) 





Engine.java
- When a Mill is formed, opponent's cells that can be removed are available in Engine.getCellsToRemove()
  - getCellsToRemove() == (String.length() == 0) when a Mill is not formed




Board.java
- This is the 9-Men's morris game board (containing 24 Cells)
- At initialization, all 24 cells are initialized using an adjacency matrix in setNeighbors()

Player.java
- Player class

Cell.java
- Board cell class (only 24 are valid, i.e. != null for 9-Men's Morris game)
- Each cell has left, right, top and bottom properties
  - cell.[left|right|top|bottom] == NULL -> associated property is not valid in board 
  
